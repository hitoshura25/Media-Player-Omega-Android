apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.vmenon.mpo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':api-mpo')
    implementation project(':api-mpo-retrofit')

    implementation project(':navigation-domain')
    implementation project(':navigation-framework')

    implementation project(':view')

    implementation project(':search-feature')
    implementation project(':downloads-feature')
    implementation project(':my-library-feature')
    implementation project(':player-feature')

    implementation project(':persistence-room')

    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.cardview:cardview:$cardViewVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.media:media:$mediaVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycleVersion"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycleVersion"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycleVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation libraries.dagger_android
    kapt libraries.dagger_android_annotations

    implementation 'com.github.bumptech.glide:glide:3.7.0'

    implementation 'javax.annotation:jsr250-api:1.0'

    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    implementation 'com.android.support:multidex:1.0.3'
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    debugImplementation 'com.facebook.stetho:stetho:1.5.1'
}
repositories {
    mavenCentral()
}
