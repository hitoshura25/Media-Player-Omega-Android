apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.vmenon.mpo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':api-mpo')
    implementation project(':api-mpo-retrofit')

    implementation project(':navigation-domain')
    implementation project(':navigation-framework')

    implementation project(':view')

    implementation project(':search-feature')
    implementation project(':downloads-feature')
    implementation project(':my-library-feature')
    implementation project(':player-feature')

    implementation project(':persistence-room')

    implementation Libs.material
    implementation Libs.cardview
    implementation Libs.recyclerview
    implementation Libs.androidx_media_media
    implementation Libs.constraintlayout

    // ViewModel
    implementation Libs.lifecycle_viewmodel_ktx
    // LiveData
    implementation Libs.lifecycle_livedata_ktx

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation Libs.lifecycle_common_java8

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation Libs.lifecycle_service

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation Libs.lifecycle_process

    // optional - ReactiveStreams support for LiveData
    implementation Libs.lifecycle_reactivestreams_ktx

    implementation Libs.dagger
    implementation Libs.legacy_support_v4
    kapt Libs.dagger_compiler

    implementation Libs.dagger
    kapt Libs.dagger_android_processor

    implementation Libs.glide

    implementation Libs.jsr250_api

    testImplementation Libs.junit_junit
    implementation Libs.kotlin_stdlib_jdk8

    implementation Libs.com_android_support_multidex
    implementation Libs.work_runtime_ktx

    debugImplementation Libs.stetho
}
repositories {
    mavenCentral()
}
