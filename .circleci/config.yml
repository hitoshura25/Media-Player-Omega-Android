# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on Android, read the docs:
# https://circleci.com/docs/2.0/language-android/ for more details.
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  android: circleci/android@1.0.3

parameters:
  run_workflow_feature_build:
    default: true
    type: boolean

  run_workflow_release:
    default: false
    type: boolean

  release_version_increment:
    default: patch
    type: string

jobs:
  build-feature:
    executor:
      name: android/android-machine

    steps:
      - checkout
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # The next step will run the unit tests
      #- android/run-tests:
      #    test-command: ./gradlew lint testDebug --continue

      # Then start the emulator and run the Instrumentation tests!
      #- android/start-emulator-and-run-tests:
      #    test-command: ./gradlew connectedDebugAndroidTest
      #    system-image: system-images;android-25;google_apis;x86
      - run:
          name: Build Feature
          command: |
            ./buildFeature.sh

  release:
    executor:
      name: android/android-machine

    steps:
      - checkout
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Release
          command: |
            ./incrementVersion.sh << pipeline.parameters.release_version_increment >>
  deploy_release:
    executor:
      name: android/android-machine

    steps:
      - checkout
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Release
          command: |
            ./release.sh

workflows:
  feature_build:
    when: << pipeline.parameters.run_workflow_feature_build >>
    jobs:
      - build-feature:
          filters:
            branches:
              ignore: main
  release:
    when: << pipeline.parameters.run_workflow_release >>
    jobs:
      - release:
          filters:
            branches:
              only: main
  deploy_release:
    jobs:
      - deploy_release:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
